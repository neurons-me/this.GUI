import React from 'react';
import PropTypes from 'prop-types';
import './Container.css';

export const Container = ({
  size = 'small',
  border = 'on',
  align = 'center',
  fluid = false,
  padding = 'md',
  marginTop = 'md',
  marginBottom = 'md',
  marginLeft = 'md',
  marginRight = 'md',
  position = 'relative',
  rounded = true, 
  borderColor,
  backgroundColor, 
  children,
}) => {
  const containerClassNames = [
    'container',
    `container--size-${size}`,
    `container--align-${align}`,
    `container--position-${position}`,
    `container--padding-${padding}`,
    `container--mt-${marginTop}`,
    `container--mb-${marginBottom}`,
    `container--ml-${marginLeft}`,
    `container--mr-${marginRight}`,
    border === 'on' ? 'container--border' : '',
    fluid ? 'container--fluid' : '',
    rounded ? 'container--rounded' : '',
    backgroundColor ? `container--bg-${backgroundColor}` : '',
    borderColor ? `container--border-${borderColor}` : '', // Add class if borderColor is set
  ].join(' ');

  return (
    <div className={containerClassNames}>
      {children}
    </div>
  );
};

Container.propTypes = {
  size: PropTypes.oneOf(['small', 'medium', 'large']),
  border: PropTypes.oneOf(['on', 'off']),
  align: PropTypes.oneOf(['left', 'center', 'right']),
  fluid: PropTypes.bool,
  padding: PropTypes.oneOf(['sm', 'md', 'lg']),
  marginTop: PropTypes.oneOf(['sm', 'md', 'lg']),
  marginBottom: PropTypes.oneOf(['sm', 'md', 'lg']),
  marginLeft: PropTypes.oneOf(['sm', 'md', 'lg']),
  marginRight: PropTypes.oneOf(['sm', 'md', 'lg']),
  position: PropTypes.oneOf(['relative', 'static', 'fixed', 'absolute', 'sticky']),
  rounded: PropTypes.bool,
  borderColor: PropTypes.oneOf([
    'none',
    'primary',
    'secondary',
    'link',
    'focus',
    'info',
    'warning',
    'alert',
    'success',
    'neutral',
    'dark',
    'classy-1',
    'classy-2',
    'classy-3',
    'classy-4',
    'classy-5',
    'small-switch-1',
    'small-switch-2',
    'natural-1',
    'natural-2',
    'natural-3',
    'grey-friend-1',
    'grey-friend-2',
    'shade-1',
    'shade-2',
    'shade-3',
    'shade-4',
  ]),
  backgroundColor: PropTypes.oneOf([
    'none', // For no background color
    'primary',
    'secondary',
    'link',
    'focus',
    'info',
    'warning',
    'alert',
    'success',
    'neutral',
    'dark',
    'classy-1',
    'classy-2',
    'classy-3',
    'classy-4',
    'classy-5',
    'small-switch-1',
    'small-switch-2',
    'natural-1',
    'natural-2',
    'natural-3',
    'grey-friend-1',
    'grey-friend-2',
    'shade-1',
    'shade-2',
    'shade-3',
    'shade-4',
  ]),
  children: PropTypes.node,
};
